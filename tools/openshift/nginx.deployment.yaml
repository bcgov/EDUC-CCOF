---
apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${REPO_NAME}-nginx-deployment
  labels:
    template: ${REPO_NAME}-template
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    labels:
      app: "${APP_NAME}-nginx-deployment"
      branch: "${BRANCH}"
    name: "${APP_NAME}-nginx-${APP_ENVIRONMENT}"
  spec:
    replicas: ${{MIN_REPLICAS}}
    selector:
      matchLabels:
        app: "${APP_NAME}-nginx-deployment"
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 25%
        maxSurge: 25%
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          app: "${APP_NAME}-nginx-deployment"
      spec:
        containers:
        - image: artifacts.developer.gov.bc.ca/docker-remote/nginxinc/nginx-unprivileged:1.27-alpine
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/Health
              port: 8080
              scheme: HTTP
              httpHeaders:
              - name: Authorization
                value: "Basic ${NGINX_BASIC_AUTH_TOKEN}"
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: "${APP_NAME}-nginx-${APP_ENVIRONMENT}"
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/Health
              port: 8080
              scheme: HTTP
              httpHeaders:
              - name: Authorization
                value: "Basic ${NGINX_BASIC_AUTH_TOKEN}"
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: "${MIN_CPU}"
              memory: "${MIN_MEM}"
            limits:
              cpu: "${MAX_CPU}"
              memory: "${MAX_MEM}"
          volumeMounts:
          - mountPath: /etc/tls-certs
            name: tls-certs
            readOnly: true
          - mountPath: /etc/nginx/conf.d
            name: config-env
        volumes:
        - name: tls-certs
          secret:
            secretName: ccof-frontend-cert
        - configMap:
            name: ${APP_NAME}-nginx-config-map
          name: config-env
    test: false
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      service.alpha.openshift.io/serving-cert-secret-name: ccof-frontend-cert
    labels:
      app: "${APP_NAME}-nginx-deployment"
    name: "${APP_NAME}-nginx-${APP_ENVIRONMENT}"
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: "${APP_NAME}-nginx-deployment"
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: "${APP_NAME}-nginx-deployment"
    name: "${APP_NAME}-nginx-${APP_ENVIRONMENT}"
  spec:
    host: "${HOST_ROUTE}"
    port:
      targetPort: 8080-tcp
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: "${APP_NAME}-nginx-${APP_ENVIRONMENT}"
      weight: 100
    wildcardPolicy: None
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    name: "${APP_NAME}-nginx-${APP_ENVIRONMENT}-cpu-autoscaler"
  spec:
    minReplicas: ${{MIN_REPLICAS}}
    maxReplicas: ${{MAX_REPLICAS}}
    metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 90
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: ${APP_NAME}-nginx-${APP_ENVIRONMENT}
parameters:
- name: REPO_NAME
  description: Application repository name
  required: true
- name: BRANCH
  description: Job identifier (i.e. 'pr-5' OR 'master')
  required: true
- name: NAMESPACE
  description: Target namespace reference (i.e. 'k8vopl-dev')
  required: true
- name: APP_NAME
  description: Application name
  required: true
- name: MIN_REPLICAS
  description: The minimum amount of replicas
  required: true
- name: MAX_REPLICAS
  description: The maximum amount of replicas
  required: true
- name: MIN_CPU
  description: The minimum amount of cpu
  required: true
- name: MAX_CPU
  description: The maximum amount of cpu
  required: true
- name: MIN_MEM
  description: The minimum amount of memory
  required: true
- name: MAX_MEM
  description: The maximum amount of memory
  required: true
- name: APP_ENVIRONMENT
  description: The environment being created ('dev', 'qa', 'uat', 'prod')
  required: true
- name: HOST_ROUTE
  description: The internal route for routing nginx traffic
  required: true
- name: NGINX_BASIC_AUTH_TOKEN
  description: The basic authentication for liveness/readiness probes
  required: true


